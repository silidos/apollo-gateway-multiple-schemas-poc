schema
  @core(feature: "https://specs.apollo.dev/core/v0.2"),
  @core(feature: "https://specs.apollo.dev/join/v0.1", for: EXECUTION)
{
  query: Query
}

directive @core(as: String, feature: String!, for: core__Purpose) repeatable on SCHEMA

directive @join__field(graph: join__Graph, provides: join__FieldSet, requires: join__FieldSet) on FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__owner(graph: join__Graph!) on INTERFACE | OBJECT

directive @join__type(graph: join__Graph!, key: join__FieldSet) repeatable on INTERFACE | OBJECT

type Query {
  """Returns details of this repo"""
  detailsOfThisRepository: RepositoryDetails @join__field(graph: SCHEMA2)

  """Returns hello world"""
  helloWorld: String @join__field(graph: SCHEMA1)
}

type RepositoryDetails {
  """When this repository was created"""
  dateCreated: String

  """Name of this repository"""
  name: String
}

enum core__Purpose {
  """
  `EXECUTION` features provide metadata necessary to for operation execution.
  """
  EXECUTION

  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY
}

scalar join__FieldSet

enum join__Graph {
  SCHEMA1 @join__graph(name: "schema1" url: "http://localhost:8080")
  SCHEMA2 @join__graph(name: "schema2" url: "http://localhost:8080")
}